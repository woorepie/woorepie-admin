spring.application.name=wooreadmin
server.servlet.context-path=/wooreadmin


# Thymeleaf ??
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8


# PostgreSQL
spring.datasource.url=${POSTGRESQL_URL}
spring.datasource.username=${POSTGRESQL_USERNAME}
spring.datasource.password=${POSTGRESQL_PASSWORD}

# JPA(Hibernate)
spring.jpa.hibernate.ddl-auto=none

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Redis
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}

# AWS S3
aws.region=ap-northeast-2
aws.s3.bucket=${BUCKET_NAME}
aws.s3.access-key=${ACCESS_KEY_ID}
aws.s3.secret-key=${SECRET_ACCESS_KEY}

#Kafka
spring.kafka.bootstrap-servers=${KAFKA_IP}
# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.trusted.packages=com.piehouse.woorepie.global.kafka.dto
spring.kafka.producer.properties.spring.json.add.type.headers=true
# Consumer
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.piehouse.woorepie.global.kafka.dto
